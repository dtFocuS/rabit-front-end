{"ast":null,"code":"import _objectSpread from \"/Users/dannytseng/Development/mod4/rabit-front-end/rabit-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/dannytseng/Development/mod4/rabit-front-end/rabit-client/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../components/Header';\nimport Home from '../components/Home';\nimport Login from '../components/Login';\nimport Account from '../components/Account'; // import * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  // constructor() {\n  //     super();\n  //     this.state = {\n  //         user_id: null,\n  //         user: null\n  //     }\n  // }\n  // getCurrentUser = (userInfo) => {\n  //     console.log(userInfo.user.id)\n  //     this.setState({\n  //         user_id: userInfo.user.id,\n  //         user: userInfo.user\n  //     }, () => {console.log(this.state.user_id)})\n  // }\n  // getUserToken = () => {\n  //     return localStorage.getItem('jwt');\n  // }\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      username: null\n    };\n\n    this.login = event => {\n      event.preventDefault();\n      console.log('log in');\n      console.log(ev.target[0]);\n      let username = event.target[0].value;\n      let password = event.target[1].value;\n      fetch('http://localhost:3000/api/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username,\n            password\n          }\n        })\n      }).then(res => res.json()).then(json => {\n        console.log('login:', json);\n\n        if (json && json.jwt) {\n          this.saveToken(json.jwt);\n          this.getProfile();\n        }\n      }).then(() => {\n        this.props.history.push('/');\n      });\n    };\n\n    this.getProfile = () => {\n      let token = this.getToken();\n      fetch('http://localhost:3000/api/v1/profile', {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(res => res.json()).then(json => {\n        console.log('profile:', json);\n        this.setState({\n          user: json.user\n        });\n      });\n    };\n\n    this.handleCreate = newUser => {\n      fetch('http://localhost:3000/api/v1/users', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: _objectSpread({}, newUser)\n        })\n      }).then(resp => resp.json()).then(json => {\n        this.setState({\n          user: json.user\n        });\n      });\n    };\n\n    this.username = React.createRef();\n    this.password = React.createRef();\n\n    if (this.getToken()) {\n      this.getProfile();\n    }\n\n    this.logout = this.logout.bind(this);\n  }\n\n  logout() {\n    this.clearToken();\n    this.setState({\n      user: null\n    });\n  }\n\n  saveToken(jwt) {\n    localStorage.setItem('jwt', jwt);\n  }\n\n  clearToken(jwt) {\n    localStorage.setItem('jwt', '');\n  }\n\n  getToken(jwt) {\n    return localStorage.getItem('jwt');\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => React.createElement(Home, Object.assign({}, routerProps, {\n        currentUserToken: this.getUserToken,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({}, routerProps, {\n        onLogin: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/account\",\n      component: Account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dannytseng/Development/mod4/rabit-front-end/rabit-client/src/containers/App.js"],"names":["React","Component","Header","Home","Login","Account","BrowserRouter","Router","Route","App","constructor","state","user","username","login","event","preventDefault","console","log","ev","target","value","password","fetch","method","headers","body","JSON","stringify","then","res","json","jwt","saveToken","getProfile","props","history","push","token","getToken","setState","handleCreate","newUser","resp","createRef","logout","bind","clearToken","localStorage","setItem","getItem","render","routerProps","getUserToken"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Header from '../components/Header'\n\nimport Home from '../components/Home';\nimport Login from '../components/Login';\nimport Account from '../components/Account';\n\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n\n    // constructor() {\n    //     super();\n    //     this.state = {\n    //         user_id: null,\n    //         user: null\n    //     }\n    // }\n\n    // getCurrentUser = (userInfo) => {\n    //     console.log(userInfo.user.id)\n    //     this.setState({\n    //         user_id: userInfo.user.id,\n    //         user: userInfo.user\n    //     }, () => {console.log(this.state.user_id)})\n    // }\n\n    // getUserToken = () => {\n    //     return localStorage.getItem('jwt');\n    // }\n\n    state = {\n        user: null,\n        username: null\n    }\n\n    constructor() {\n        super()\n        this.username = React.createRef()\n        this.password = React.createRef()\n\n        if (this.getToken()) {\n            this.getProfile()\n        }\n\n        this.logout = this.logout.bind(this)\n    }\n\n    login = (event) => {\n        event.preventDefault()\n        console.log('log in')\n        console.log(ev.target[0])\n        let username = event.target[0].value\n        let password = event.target[1].value\n\n        fetch('http://localhost:3000/api/v1/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ user: { username, password } })\n        })\n            .then(res => res.json())\n            .then(json => {\n                console.log('login:', json)\n                if (json && json.jwt) {\n                    this.saveToken(json.jwt)\n                    this.getProfile()\n                }\n            })\n            .then(() => {\n                this.props.history.push('/')\n            })\n    }\n\n    logout() {\n        this.clearToken();\n        this.setState({ user: null })\n    }\n\n    getProfile = () => {\n        let token = this.getToken()\n        fetch('http://localhost:3000/api/v1/profile', {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(res => res.json())\n            .then(json => {\n                console.log('profile:', json)\n                this.setState({ user: json.user })\n            })\n    }\n\n    saveToken(jwt) {\n        localStorage.setItem('jwt', jwt)\n    }\n\n    clearToken(jwt) {\n        localStorage.setItem('jwt', '')\n    }\n\n    getToken(jwt) {\n        return localStorage.getItem('jwt')\n    }\n\n    handleCreate = (newUser) => {\n        fetch('http://localhost:3000/api/v1/users', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ user: { ...newUser } })\n        })\n            .then(resp => resp.json())\n            .then(json => { this.setState({ user: json.user }) })\n\n    }\n\n    render() {\n\n        return(\n            <Router>\n                <React.Fragment>\n                    <Header />\n                    <Route exact path=\"/\" render={routerProps => <Home {...routerProps} currentUserToken={this.getUserToken}/>} />\n                    <Route exact path=\"/login\" render={routerProps => <Login {...routerProps} onLogin={this.login}/>} />\n                    <Route exact path=\"/account\" component={Account} />\n                </React.Fragment>\n            </Router>\n\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}