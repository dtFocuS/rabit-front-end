{"ast":null,"code":"var _jsxFileName = \"/Users/dannytseng/Development/mod4/rabit-front-end/rabit-client/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from '../components/Header';\nimport Home from '../components/Home';\nimport Login from '../components/Login';\nimport Account from '../components/Account';\nimport Open from '../components/Open'; // import * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getUser = () => {\n      let token = this.getToken();\n      fetch('http://localhost:3000/api/v1/profile', {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(res => res.json()).then(json => {\n        if (json.user) {\n          this.setState({\n            user: json.user,\n            user_id: json.user.id\n          }, () => {\n            this.loadUserTasks();\n          });\n        }\n      });\n    };\n\n    this.createTask = newTask => {\n      const time = newTask.hours + \":\" + newTask.minutes + \" \" + newTask.ampm;\n      console.log(time);\n      const dollarAmount = parseFloat(newTask.prefer_cost).toFixed(2);\n      fetch(\"http://localhost:3000/api/v1/tasks\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          task: {\n            name: newTask.name,\n            description: newTask.description,\n            address: newTask.address,\n            city: newTask.city,\n            state: newTask.state,\n            zip_code: parseInt(newTask.zip_code),\n            prefer_cost: dollarAmount,\n            completed_by: time,\n            user_id: this.state.user.id\n          }\n        })\n      }).then(resp => resp.json()).then(task => {\n        console.log(task);\n        this.setState({\n          userTasks: this.state.user.tasks\n        }, () => {\n          this.getUser();\n        });\n      });\n    };\n\n    this.logout = () => {\n      //this.clearToken();\n      this.setState({\n        user: null\n      });\n    };\n\n    this.loadOtherTasks = () => {\n      fetch('http://localhost:3000/api/v1/tasks').then(resp => resp.json()).then(tasks => this.filterOtherTasks(tasks));\n    };\n\n    this.filterOtherTasks = tasks => {\n      if (this.state.user) {\n        let temp = tasks.slice();\n        const filteredTasks = temp.filter(task => task.user_id !== this.state.user.id);\n        this.setState({\n          otherTasks: filteredTasks\n        }, () => {\n          this.loadUserBids();\n        });\n      }\n    };\n\n    this.loadAllTasks = () => {\n      fetch('http://localhost:3000/api/v1/tasks').then(resp => resp.json()).then(tasks => {\n        this.setState({\n          allTasks: tasks\n        }, () => {\n          console.log(tasks);\n        });\n      });\n    };\n\n    this.getProfile = () => {\n      let token = this.getToken();\n      fetch('http://localhost:3000/api/v1/profile', {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(res => res.json()).then(json => {\n        console.log('profile:', json);\n        this.setState({\n          user: json.user\n        }, () => {\n          this.loadUserTasks();\n        });\n      });\n    };\n\n    this.loadUserTasks = () => {\n      if (this.state.user) {\n        let temp = this.state.user.tasks.slice().reverse();\n        this.setState({\n          userTasks: temp\n        }, () => {\n          this.loadOtherTasks();\n        });\n      }\n    };\n\n    this.editTask = newTask => {\n      console.log(newTask);\n      const time = newTask.hours + \":\" + newTask.minutes + \" \" + newTask.ampm;\n      console.log(time);\n      const dollarAmount = parseFloat(newTask.prefer_cost).toFixed(2);\n      fetch(\"http://localhost:3000/api/v1/tasks/\" + newTask.task_id, {\n        method: \"PATCH\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          task: {\n            name: newTask.name,\n            description: newTask.description,\n            address: newTask.address,\n            city: newTask.city,\n            state: newTask.state,\n            zip_code: parseInt(newTask.zip_code),\n            prefer_cost: dollarAmount,\n            completed_by: time,\n            user_id: this.state.user.id\n          }\n        })\n      }).then(resp => resp.json()).then(task => {\n        this.getUser();\n      });\n    };\n\n    this.placeBid = newBid => {\n      console.log(newBid);\n      const dollarAmount = parseFloat(newBid.amount).toFixed(2);\n      fetch(\"http://localhost:3000/api/v1/bids\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          bid: {\n            amount: dollarAmount,\n            eta: newBid.eta,\n            user_id: this.state.user.id,\n            task_id: newBid.task_id\n          }\n        })\n      }).then(resp => resp.json()).then(bid => {\n        this.loadUserBids();\n      });\n    };\n\n    this.loadUserBids = () => {\n      fetch(\"http://localhost:3000/api/v1/bids\").then(resp => resp.json()).then(bids => {\n        console.log(\"load bids\");\n        this.filterBids(bids);\n      });\n    };\n\n    this.filterBids = bids => {\n      console.log(this.state.user);\n\n      if (this.state.user) {\n        //let temp = bids.slice();\n        const filteredBids = bids.filter(bid => bid.user_id === this.state.user.id);\n        this.findMyBidTasks(filteredBids);\n      }\n    };\n\n    this.findMyBidTasks = filteredBids => {\n      console.log(filteredBids);\n\n      if (this.state.otherTasks) {\n        const taskIds = filteredBids.map(bid => bid.task_id);\n        const otherUserTasks = this.state.allTasks.filter(task => task.user_id !== this.state.user.id);\n        console.log(otherUserTasks);\n        let temp = [];\n\n        for (let i = 0; i < taskIds.length; i++) {\n          for (const task of otherUserTasks) {\n            console.log(taskIds[i]);\n\n            if (task.id === taskIds[i]) {\n              console.log(task.id);\n              temp.push(task);\n            }\n          }\n        }\n\n        console.log(this.state.user.id);\n        console.log(temp);\n        this.setState({\n          bidTasks: temp\n        }, () => {\n          this.removeFromAvailableTasks();\n        });\n      }\n    };\n\n    this.removeFromAvailableTasks = () => {\n      //let array = this.state.otherTasks.slice();\n      const array = this.state.allTasks.filter(task => task.user_id !== this.state.user.id);\n\n      for (let i = 0; i < this.state.bidTasks.length; i++) {\n        var index = array.indexOf(this.state.bidTasks[i]);\n\n        if (index > -1) {\n          array.splice(index, 1);\n        }\n      }\n\n      this.setState({\n        otherTasks: array\n      }, () => {\n        console.log(this.state.bidTasks);\n      });\n    };\n\n    this.removeTask = task => {\n      // console.log(task);\n      fetch(\"http://localhost:3000/api/v1/tasks/\" + task.id, {\n        method: \"DELETE\"\n      }).then(resp => resp.json()).then(json => {\n        this.getUser();\n      });\n    };\n\n    this.removeBid = task => {\n      console.log(task);\n      const removingBid = this.state.bidTasks.find(bid => bid.task_id === task.id);\n      console.log(removingBid);\n    };\n\n    this.state = {\n      user: null,\n      user_id: null,\n      userTasks: [],\n      otherTasks: [],\n      bidTasks: [],\n      allTasks: []\n    };\n  }\n\n  getToken(jwt) {\n    return localStorage.getItem('jwt');\n  }\n\n  saveToken(jwt) {\n    localStorage.setItem('jwt', jwt);\n  }\n\n  getToken(jwt) {\n    return localStorage.getItem('jwt');\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.loadAllTasks();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Header, {\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => React.createElement(Home, Object.assign({}, routerProps, {\n        onCreateTask: this.createTask,\n        userTasks: this.state.userTasks,\n        onEditTask: this.editTask,\n        user: this.state.user,\n        otherTasks: this.state.otherTasks,\n        placeBid: this.placeBid,\n        bidTasks: this.state.bidTasks,\n        onRemoveTask: this.removeTask,\n        onRemoveBid: this.removeBid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({}, routerProps, {\n        getUser: this.getUser,\n        onHandleCreate: this.createUser,\n        user: this.state.user,\n        handleLogout: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/account\",\n      render: routerProps => React.createElement(Account, Object.assign({}, routerProps, {\n        onCreateTask: this.createTask,\n        userTasks: this.state.userTasks,\n        onEditTask: this.editTask,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/open\",\n      render: routerProps => React.createElement(Open, Object.assign({}, routerProps, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dannytseng/Development/mod4/rabit-front-end/rabit-client/src/containers/App.js"],"names":["React","Component","Header","Home","Login","Account","Open","BrowserRouter","Router","Route","App","constructor","getUser","token","getToken","fetch","headers","then","res","json","user","setState","user_id","id","loadUserTasks","createTask","newTask","time","hours","minutes","ampm","console","log","dollarAmount","parseFloat","prefer_cost","toFixed","method","body","JSON","stringify","task","name","description","address","city","state","zip_code","parseInt","completed_by","resp","userTasks","tasks","logout","loadOtherTasks","filterOtherTasks","temp","slice","filteredTasks","filter","otherTasks","loadUserBids","loadAllTasks","allTasks","getProfile","reverse","editTask","task_id","placeBid","newBid","amount","bid","eta","bids","filterBids","filteredBids","findMyBidTasks","taskIds","map","otherUserTasks","i","length","push","bidTasks","removeFromAvailableTasks","array","index","indexOf","splice","removeTask","removeBid","removingBid","find","jwt","localStorage","getItem","saveToken","setItem","componentDidMount","render","routerProps","createUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Header from '../components/Header'\n\nimport Home from '../components/Home';\nimport Login from '../components/Login';\nimport Account from '../components/Account';\nimport Open from '../components/Open';\n\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            user: null,\n            user_id: null,\n            userTasks: [],\n            otherTasks:[],\n            bidTasks: [],\n            allTasks: []\n        }\n    }\n\n    getToken(jwt) {\n        return localStorage.getItem('jwt')\n    }\n\n    getUser = () => {\n      let token = this.getToken()\n      fetch('http://localhost:3000/api/v1/profile', {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      })\n      .then(res => res.json())\n      .then(json => {\n        if (json.user) {\n          this.setState( { user: json.user, user_id: json.user.id }, () => {\n            this.loadUserTasks()\n          })\n        }\n      })\n    }\n\n\n\n    createTask = (newTask) => {\n        const time = newTask.hours + \":\" + newTask.minutes + \" \" + newTask.ampm;\n        console.log(time);\n        const dollarAmount = parseFloat(newTask.prefer_cost).toFixed(2);\n        fetch(\"http://localhost:3000/api/v1/tasks\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ task: { name: newTask.name, description: newTask.description, address: newTask.address, city: newTask.city, state: newTask.state, zip_code: parseInt(newTask.zip_code), prefer_cost: dollarAmount, completed_by: time, user_id: this.state.user.id} })\n        })\n        .then(resp => resp.json())\n        .then(task => {\n            console.log(task)\n            this.setState({userTasks: this.state.user.tasks}, () => {this.getUser()})\n        })\n    }\n\n\n    logout = () => {\n        //this.clearToken();\n        this.setState({\n            user: null\n        })\n    }\n\n    // componentDidMount() {\n    //     this.getProfile();\n        \n    // }\n\n    loadOtherTasks = () => {\n        fetch('http://localhost:3000/api/v1/tasks')\n        .then(resp => resp.json())\n        .then(tasks => this.filterOtherTasks(tasks))\n    }\n\n    filterOtherTasks = (tasks) => {\n        if (this.state.user) {\n            let temp = tasks.slice();\n            const filteredTasks = temp.filter(task => task.user_id !== this.state.user.id)\n            this.setState({\n                otherTasks: filteredTasks\n            }, () => { this.loadUserBids();})\n        }\n    }\n\n    loadAllTasks = () => {\n        fetch('http://localhost:3000/api/v1/tasks')\n        .then(resp => resp.json())\n        .then(tasks => {this.setState({\n            allTasks: tasks\n        }, () => {console.log(tasks)})})\n    }\n\n\n    getProfile = () => {\n        let token = this.getToken()\n        fetch('http://localhost:3000/api/v1/profile', {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            console.log('profile:', json)\n            this.setState({ user: json.user}, () => {this.loadUserTasks()})\n        })\n    }\n\n    saveToken(jwt) {\n        localStorage.setItem('jwt', jwt)\n    }\n\n    getToken(jwt) {\n        return localStorage.getItem('jwt')\n    }\n\n    loadUserTasks = () => {\n      if (this.state.user) {\n        let temp = this.state.user.tasks.slice().reverse();\n        this.setState({\n            userTasks: temp\n        }, () => {this.loadOtherTasks()})\n      }\n    }\n\n    editTask = (newTask) => {\n        console.log(newTask);\n        const time = newTask.hours + \":\" + newTask.minutes + \" \" + newTask.ampm;\n        console.log(time);\n        const dollarAmount = parseFloat(newTask.prefer_cost).toFixed(2);\n        fetch(\"http://localhost:3000/api/v1/tasks/\" + newTask.task_id, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ task: { name: newTask.name, description: newTask.description, address: newTask.address, city: newTask.city, state: newTask.state, zip_code: parseInt(newTask.zip_code), prefer_cost: dollarAmount, completed_by: time, user_id: this.state.user.id } })\n        })\n        .then(resp => resp.json())\n        .then(task => {\n            this.getUser()\n        })\n    }\n\n    componentDidMount() {\n        this.getUser()\n        this.loadAllTasks()\n    }\n\n\n    placeBid = (newBid) => {\n        console.log(newBid);\n        const dollarAmount = parseFloat(newBid.amount).toFixed(2);\n        fetch(\"http://localhost:3000/api/v1/bids\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ bid: { amount: dollarAmount, eta: newBid.eta, user_id: this.state.user.id, task_id: newBid.task_id } })\n        })\n        .then(resp => resp.json())\n        .then(bid => {\n            this.loadUserBids();\n        })\n    }\n\n    loadUserBids = () => {\n        fetch(\"http://localhost:3000/api/v1/bids\")\n        .then(resp => resp.json())\n        .then(bids => {\n            console.log(\"load bids\")\n            this.filterBids(bids);\n        })\n    }\n\n    filterBids = (bids) => {\n        console.log(this.state.user)\n        if (this.state.user) {\n            //let temp = bids.slice();\n            const filteredBids = bids.filter(bid => bid.user_id === this.state.user.id)\n            this.findMyBidTasks(filteredBids);\n        }\n    }\n\n    findMyBidTasks = (filteredBids) => {\n        console.log(filteredBids)\n        if (this.state.otherTasks) {\n            const taskIds = filteredBids.map(bid => bid.task_id);\n            const otherUserTasks = this.state.allTasks.filter(task => task.user_id !== this.state.user.id);\n            console.log(otherUserTasks)\n            let temp = [];\n            for (let i = 0; i < taskIds.length; i++) {\n                for (const task of otherUserTasks) {\n                    console.log(taskIds[i])\n                    if (task.id === taskIds[i]) {\n                        console.log(task.id)\n                        temp.push(task);\n                        \n                    }\n                }\n            }\n            console.log(this.state.user.id)\n            console.log(temp)\n            this.setState({\n                bidTasks: temp\n            }, () => {this.removeFromAvailableTasks()})\n        }\n    }\n\n    removeFromAvailableTasks = () => {\n        //let array = this.state.otherTasks.slice();\n        const array = this.state.allTasks.filter(task => task.user_id !== this.state.user.id);\n        for (let i = 0; i < this.state.bidTasks.length; i ++) {\n            var index = array.indexOf(this.state.bidTasks[i]);\n            if (index > -1) {\n                array.splice(index, 1);\n            }\n        }\n        this.setState({\n            otherTasks: array\n        }, () => { console.log(this.state.bidTasks) })\n\n    }\n\n    removeTask = (task) => {\n        // console.log(task);\n        fetch(\"http://localhost:3000/api/v1/tasks/\" + task.id, {\n            method: \"DELETE\",\n        })\n        .then(resp => resp.json())\n        .then(json => {\n            this.getUser();\n        })\n    }\n\n    removeBid = (task) => {\n        console.log(task)\n        const removingBid = this.state.bidTasks.find(bid => bid.task_id === task.id)\n        console.log(removingBid);\n    }\n\n\n\n    render() {\n\n\n        return(\n            <Router>\n                <React.Fragment>\n\n                    <Header user={this.state.user} />\n                    {/* <Header currentUser={this.state.user}/> */}\n                    <Route exact path=\"/\" render={routerProps => <Home {...routerProps} onCreateTask={this.createTask} userTasks={this.state.userTasks} onEditTask={this.editTask} user={this.state.user} otherTasks={this.state.otherTasks} placeBid={this.placeBid} bidTasks={this.state.bidTasks} onRemoveTask={this.removeTask} onRemoveBid={this.removeBid}/>} />\n\n                    \n\n                    {/* <Route exact path=\"/\" render={routerProps => <Home {...routerProps} createTask={this.createTask} userTasks={this.state.userTasks} onEditTask={this.editTask} user={this.state.user}/>} /> */}\n\n                    <Route exact path=\"/login\" render={routerProps => <Login {...routerProps} getUser={this.getUser} onHandleCreate={this.createUser} user={this.state.user} handleLogout={this.logout}/>} />\n\n                    <Route exact path=\"/account\" render={routerProps => <Account {...routerProps} onCreateTask={this.createTask} userTasks={this.state.userTasks} onEditTask={this.editTask} user={this.state.user}/>} />\n\n                    <Route exact path=\"/open\" render={routerProps => <Open {...routerProps} user={this.state.user}/>} />\n\n\n                </React.Fragment>\n            </Router>\n\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}